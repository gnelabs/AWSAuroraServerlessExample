#Author: Nathan ward

AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Example cloudformation template for AWS Aurora Serverless V2 I/O optimized database.

Parameters:
  Stage: {Type: String, Default: 'dev'}
  DBUsername:
    NoEcho: 'true'
    Description: "Username for database access."
    Type: String
    MinLength: '1'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: "Must begin with a letter and contain only alphanumeric characters."
  DBPassword:
    NoEcho: 'true'
    Description: "Password for database access."
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: "Must contain only alphanumeric characters."

Conditions:
  IsProd:
    Fn::Equals:
      - Ref: Stage
      - prod

Resources:
  ######################################################
  #            Aurora Cluster Configuration            #
  ######################################################
  ExampleSQLCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      DatabaseName: "ExampleServerlessDBCluster"
      ServerlessV2ScalingConfiguration:
        MinCapacity: 0.5
        MaxCapacity: 4
      StorageEncrypted: false
      Engine: aurora-mysql
      EngineVersion: 8.0.mysql_aurora.3.03.1
      PreferredMaintenanceWindow: sat:22:30-sun:02:00
      PreferredBackupWindow: 03:00-05:00
      EnableCloudwatchLogsExports:
        - slowquery
      BackupRetentionPeriod: 2
      EnableIAMDatabaseAuthentication: true
      NetworkType: IPV4
      VpcSecurityGroupIds:
        - { 'Fn::GetAtt' : ExampleSQLSecurityGroup.GroupId}
      MasterUsername: {Ref: DBUsername}
      MasterUserPassword: {Ref: DBPassword}
      StorageType: aurora-iopt1

  ######################################################
  #         Serverless V2 database instance            #
  ######################################################
  ExampleSQLAurora:
    Type: AWS::RDS::DBInstance
    Properties:
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      DBClusterIdentifier: {Ref: ExampleSQLCluster}
      PubliclyAccessible: true
      AvailabilityZone: us-east-1a
      MultiAZ: false
      Engine: aurora-mysql
      DBInstanceClass: db.serverless

  ######################################################
  #            Unrestricted ingress to DB              #
  ######################################################
  ExampleSQLSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow MySQL (TCP3306)
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: "0.0.0.0/0"

Outputs:
  StackArn:
    Description: "Use this as the stack_arn in your cloud_formation_deployment_stack override."
    Value: {Ref: 'AWS::StackId'}
  ExampleSQLEndpoint:
    Description: "Aurora serverless database endpoint."
    Value: { 'Fn::GetAtt' : ExampleSQLCluster.Endpoint.Address}
    Export: {Name: {'Fn::Sub': '${AWS::StackName}-DBEndpoint'}}
